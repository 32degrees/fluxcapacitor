// Establish version and status
ext.githubProjectName = rootProject.name // Change if github project name is not the same as the root project's name

buildscript {
    repositories { mavenCentral() }
    apply from: file('gradle/buildscript.gradle'), to: buildscript 
}

allprojects {
    repositories { mavenCentral() }
}

apply from: file('gradle/convention.gradle')
apply from: file('gradle/maven.gradle')
apply from: file('gradle/check.gradle')
apply from: file('gradle/license.gradle')
apply from: file('gradle/release.gradle')

subprojects {
    group = "com.netflix.${githubProjectName}" // TEMPLATE: Set to organization of project

    dependencies {
        compile 'org.slf4j:slf4j-api:1.7.2'
        compile 'io.netty:netty:3.6.3.Final'
        compile 'com.netflix.servo:servo-core:0.4.32'
        compile 'com.netflix.servo:servo-graphite:0.4.32'
		compile 'com.netflix.servo:servo-aws:0.4.32'
        compile 'com.google.guava:guava:11.0.2'
        compile 'com.google.inject:guice:3.0'
        compile 'com.netflix.archaius:archaius-core:0.5.6'
        compile 'com.netflix.archaius:archaius-zookeeper:0.5.6'
        compile 'com.netflix.netflix-commons:netflix-commons-util:0.1.1'
        compile 'javax.ws.rs:jsr311-api:1.1.1' 
        compile 'commons-collections:commons-collections:3.2.1'
        compile 'com.sun.jersey:jersey-server:1.13'
        compile 'com.sun.jersey:jersey-core:1.13'
        compile 'com.sun.jersey:jersey-bundle:1.13'
        compile 'com.sun.jersey.contribs:jersey-guice:1.13'
        compile 'com.netflix.eureka:eureka-client:1.1.73'
        compile 'com.netflix.blitz4j:blitz4j:1.23'
        compile 'jetty:jetty:6.0.2'
        compile 'jetty:servlet-api:2.5-6.0.2'
        compile 'jetty:jetty-util:6.0.2'
        compile 'jetty:jsp:2.1-6.0.2'
        compile 'jetty:jsp-api:2.1-6.0.2'
        compile 'com.netflix.hystrix:hystrix-core:1.2.12'
        compile 'com.netflix.hystrix:hystrix-metrics-event-stream:1.2.12'
        compile 'com.netflix.hystrix:hystrix-servo-metrics-publisher:1.2.12'
        compile 'com.netflix.ribbon:ribbon-core:0.1.5'
        compile 'com.netflix.ribbon:ribbon-eureka:0.1.5'
        compile 'com.netflix.ribbon:ribbon-httpclient:0.1.5'
        compile 'com.netflix.governator:governator:1.1.1'
    	compile 'com.netflix.karyon:karyon-core:1.0.3'
    	compile 'com.netflix.karyon:karyon-admin-web:1.0.3'
    	
        testCompile 'junit:junit:4.10'
        testCompile 'log4j:log4j:1.2.16'

        runtime 'org.slf4j:slf4j-log4j12:1.6.1'
        runtime 'org.apache.maven.plugins:maven-antrun-plugin:1.6'
    }
}

project(':flux-core') {
    apply plugin: 'java'
    dependencies {
        compile 'com.netflix.netflix-commons:netflix-statistics:0.1.1'
    }
}

project(':flux-middletier') {
    apply plugin: 'java'
    apply plugin: 'war'

    dependencies {
        compile project(':flux-core')
        compile 'org.apache.httpcomponents:httpclient:4.1.2'
        compile 'asm:asm-all:3.2'
        compile 'commons-io:commons-io:2.4'
        compile 'commons-configuration:commons-configuration:1.9'
        compile 'com.sun.jersey:jersey-server:1.9.1'
        compile 'com.netflix.astyanax:astyanax-core:1.56.29'
        compile 'com.netflix.astyanax:astyanax-thrift:1.56.29'
        compile 'com.netflix.astyanax:astyanax-cassandra:1.56.29'
        compile 'com.google.code.gson:gson:2.2.2'       
    }

	war {
	    from('resources')  {
	        include '*.properties'
	        into 'WEB-INF/classes/'
	    }
	    webXml = file('webapp/WEB-INF/web.xml')
	}

    jar {
        from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
        manifest { attributes 'Main-Class': 'com.fluxcapacitor.middletier.server.MiddleTierServer' }
        exclude 'META-INF/*.SF', 'META-INF/*.DSA', 'META-INF/*.RSA'
    }
}

project(':flux-edge') {
    apply plugin: 'java'
    apply plugin: 'war'

    dependencies {
        compile project(':flux-core')
        compile 'com.amazonaws:aws-java-sdk:1.3.27'
        compile 'commons-io:commons-io:2.4'
        compile 'org.json:json:20090211'
        testCompile project(':flux-middletier')        
    }

	war {
	    from('resources')  {
	        include '*.properties'
	        into 'WEB-INF/classes/'
	    }
	    webXml = file('webapp/WEB-INF/web.xml')
	}

    jar {
        from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
        manifest { attributes 'Main-Class': 'com.fluxcapacitor.edge.server.EdgeServer' }
        exclude 'META-INF/*.SF', 'META-INF/*.DSA', 'META-INF/*.RSA'
    }
}